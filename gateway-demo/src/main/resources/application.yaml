server:
  port: 80
spring:
  application:
    name: gateway-demo
  cloud:
    gateway:
      routes:
        - id: between_route
          uri: http://www.baidu.com
          predicates:
            - Path=/baidu
            - Between=2023-02-26T13:00:00+08:00[Asia/Shanghai],2024-12-27T13:00:00+08:00[Asia/Shanghai]
        - id: header_route
          uri: http://www.baidu.com
          predicates:
            - Header=X-Request-id,\d+
        - id: host_route
          uri: http://www.baidu.com
          predicates:
            - Host=*.kim.com,{sub}.study.com
        - id: path_route
          uri: http://www.baidu.com
          predicates:
            - Path=/red/{segment},/blue/{segment}
        - id: weight_high
          uri: http://www.baidu.com
          predicates:
            - Path=/weight
            - Weight=group1,5
        - id: weight_low
          uri: http://www.sogou.com
          predicates:
            - Path=/weight
            - Weight=group2,5
        - id: add-all
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/add-all
          filters:
            - AddRequestHeader=X-Request-color,blue
            - AddRequestParameter=name,kim
            - AddResponseHeader=X-Response-color,black
        - id: dedupeResponseHeader
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/dedupeResponseHeader
          filters:
            - AddResponseHeader=X-Response-color,black
            - name: DedupeResponseHeader
              args:
                name: X-Response-color
                # RETAIN_FIRST (default), RETAIN_LAST, and RETAIN_UNIQUE
                strategy: RETAIN_LAST
        - id: mapRequestHeader
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/mapRequestHeader
          filters:
            - MapRequestHeader=color,map-to-color
        - id: prefixPath
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/prefixPath
          filters:
            - PrefixPath=/prefix
        - id: preserveHostHeader
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/preserveHostHeader
          filters:
            - PreserveHostHeader
        - id: redirectToAbsolutePath
          uri: http://www.baidu.com
          predicates:
            - Path=/redirectToAbsolutePath
          filters:
            - RedirectTo=302,http://www.sogou.com
        - id: redirectToRelativePath
          uri: no://op
          predicates:
            - Path=/redirectToRelativePath
          filters:
            - RedirectTo=302,/relativePath
        - id: removeHeaderAndParameter
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/removeHeaderAndParameter
          filters:
            - RemoveRequestHeader=address
            - RemoveResponseHeader=X-Response-color
            - RemoveRequestParameter=color
        - id: rewritePath
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/base/**
          filters:
            - RewritePath=/base(?<segment>/?.*),/api$\{segment}
        - id: rewriteResponseHeader
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/rewriteResponseHeader
          filters:
            - RewriteResponseHeader=secret-info,password=[^&]+, password=***
        - id: setPath
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/user-service/{segment}
          filters:
            SetPath=/{segment}
        - id: setHeader
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/setHeader
          filters:
            - SetRequestHeader=request-color,green
            - SetResponseHeader=X-Response-color,yellow
        - id: requestSize
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/requestSize
          filters:
            - name: RequestSize
              args:
                maxSize: 1B
        - id: setRequestHostHeader
          uri: http://127.0.0.1:8080
          predicates:
            - Path=/setRequestHostHeader
          filters:
            - name: SetRequestHostHeader
              args:
                host: www.kim.com
        #- id: forwardRoutingFilter
        #  uri: forward://abcde
        #  predicates:
        #    - Header=forward,true
        - id: lb-route
          uri: lb://user-service
          predicates:
            - Path=/user-service/**
          filters:
            - StripPrefix=1

      default-filters:
        - AddRequestHeader=x-from,pc

      metrics:
        enabled: true
logging:
  level:
    org.springframework.cloud: debug